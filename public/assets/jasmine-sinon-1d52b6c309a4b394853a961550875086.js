!function(e,t){"use strict";function n(e,t,n){return o.match(function(r){return t.equals(r,e,n)})}function r(t){var r=e.matchers[t.jasmineName];return function(i,o){return{compare:function(){var a,s,u,c=[].slice.call(arguments,0),l=c[0];if(e.isSpy(l)&&r)return r(i,o).compare.apply(null,c);for(var f=0,d=c.length;d>f;f++)s=c[f],s&&("function"==typeof s.jasmineMatches||s instanceof e.ObjectContaining)&&(c[f]=n(s,i,o));return a=l[t.sinonName],u="function"==typeof a?a.apply(l,c.slice(1)):a,{pass:u,message:t.message(u,l,c.slice(1))}}}}}function i(e){for(var t,n={},i=0,o=e.length;o>i;i++)t=e[i],n[t.jasmineName]=r(t);return n}var o;o="function"==typeof require&&"object"==typeof module?require("sinon"):window.sinon;var a={spy:function(e){return function(t,n){return s.expectedSpy(t,n,e)+"."}},spyWithCallCount:function(e){return function(t,n){return s.expectedSpy(t,n,e)+". "+s.callCount(n)+"."}},spyWithOtherArgs:function(e){return function(t,n,r){return s.expectedSpy(t,n,e)+" "+s.otherArgs(r)}}},s={expectedSpy:function(e,t,n){var r=e?"not ":"",i=t.printf||o.spy.printf;return i.call(t,'Expected spy "%n" %1%2',r,n)},callCount:function(e){var t=e.printf||o.spy.printf;return t.call(e,'"%n" was called %c')},otherArgs:function(t){return t&&t.length?e.pp(t.length>1?t:t[0]):""}},u=[{sinonName:"called",jasmineName:"toHaveBeenCalled",message:a.spyWithCallCount("to have been called")},{sinonName:"calledOnce",jasmineName:"toHaveBeenCalledOnce",message:a.spyWithCallCount("to have been called once")},{sinonName:"calledTwice",jasmineName:"toHaveBeenCalledTwice",message:a.spyWithCallCount("to have been called twice")},{sinonName:"calledThrice",jasmineName:"toHaveBeenCalledThrice",message:a.spyWithCallCount("to have been called thrice")},{sinonName:"calledBefore",jasmineName:"toHaveBeenCalledBefore",message:a.spyWithOtherArgs("to have been called before")},{sinonName:"calledAfter",jasmineName:"toHaveBeenCalledAfter",message:a.spyWithOtherArgs("to have been called after")},{sinonName:"calledOn",jasmineName:"toHaveBeenCalledOn",message:a.spyWithOtherArgs("to have been called on")},{sinonName:"alwaysCalledOn",jasmineName:"toHaveBeenAlwaysCalledOn",message:a.spyWithOtherArgs("to have been always called on")},{sinonName:"calledWith",jasmineName:"toHaveBeenCalledWith",message:a.spyWithOtherArgs("to have been called with")},{sinonName:"alwaysCalledWith",jasmineName:"toHaveBeenAlwaysCalledWith",message:a.spyWithOtherArgs("to have been always called with")},{sinonName:"calledWithExactly",jasmineName:"toHaveBeenCalledWithExactly",message:a.spyWithOtherArgs("to have been called with exactly")},{sinonName:"alwaysCalledWithExactly",jasmineName:"toHaveBeenAlwaysCalledWithExactly",message:a.spyWithOtherArgs("to have been always called with exactly")},{sinonName:"calledWithMatch",jasmineName:"toHaveBeenCalledWithMatch",message:a.spyWithOtherArgs("to have been called with match")},{sinonName:"alwaysCalledWithMatch",jasmineName:"toHaveBeenAlwaysCalledWithMatch",message:a.spyWithOtherArgs("to have been always called with match")},{sinonName:"calledWithNew",jasmineName:"toHaveBeenCalledWithNew",message:a.spy("to have been called with new")},{sinonName:"neverCalledWith",jasmineName:"toHaveBeenNeverCalledWith",message:a.spyWithOtherArgs("to have been never called with")},{sinonName:"neverCalledWithMatch",jasmineName:"toHaveBeenNeverCalledWithMatch",message:a.spyWithOtherArgs("to have been never called with match")},{sinonName:"threw",jasmineName:"toHaveThrown",message:a.spyWithOtherArgs("to have thrown an error")},{sinonName:"alwaysThrew",jasmineName:"toHaveAlwaysThrown",message:a.spyWithOtherArgs("to have always thrown an error")},{sinonName:"returned",jasmineName:"toHaveReturned",message:a.spyWithOtherArgs("to have returned")},{sinonName:"alwaysReturned",jasmineName:"toHaveAlwaysReturned",message:a.spyWithOtherArgs("to have always returned")}];t(function(){e.addMatchers(i(u))}),e.jasmineSinon={messageFactories:a}}(jasmine,beforeEach);